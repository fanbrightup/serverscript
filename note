
服务端(这里安装的shadowsocks是python版的)：
为Debian / Ubuntu 安装shadowsocks服务端：

apt-get install python-pip
pip install shadowsocks

配置shadowsocks服务端：
在 /etc目录下创建  shadowsocks.json 文件，将下面的内容放进去：

{
"server":"::",
"server_port":8388,
"local_address": "127.0.0.1",
"local_port":1080,
"password":"mypassword",
"timeout":300,
"method":"aes-256-cfb",
"fast_open": false,
"workers": 1
}

然后启动运行 shadowsocks服务器端：

ssserver -c /etc/shadowsocks.json

此时不要关闭终端命令操作窗口，然后到http://sourceforge.net/projects/shadowsocksgui/files/dist/    下载windows下的shadowsocks客户端，注意，下载的文件是以xx.tar.xz结尾的，一种新的压缩方法。先自己安装7zip，将其皆为为 xx.tar  ，然后随便用rar或者7zp继续解压，就得到可执行文件了。

然后，将刚才设置的参数，填写到对应的位置，点击 “save”保存，然后配置浏览器的代理，将对应的本地端口改成你刚才的设置，就可以无阻碍的上网了。

命令行参数：
可以用下面的命令行参数来更改 config.json中的设置：

sslocal -s server_addr -p server_port -l local_port -k password -m bf-cfb
ssserver -p server_port -k password -m bf-cfb --workers 2
ssserver -c /etc/shadowsocks/config.json

可以使用 -h  查看所有参数。
wiki地址：https://github.com/clowwindy/shadowsocks/wiki

下面说下如何后台运行shadowsocks 。因为按照上面的方法，只要关闭终端窗口，那么shadowsocks进程也就中断了，我们没法通过shadowsocks上网了。所以，我们可以使用supervisor 来启动和管理监控shadowsocks进程。

Debian下：
运行：

apt-get update
apt-get install python-pip python-m2crypto supervisor
pip install shadowsocks

编辑 /etc/supervisor/conf.d/shadowsocks.conf  ，增加下面的内容：

[program:shadowsocks]
command=ssserver -c /etc/shadowsocks.json
autorestart=true
user=nobody

并在 /etc/default/supervisor 文件的后面加入下面的一行内容：

ulimit -n 51200

接着运行命令,启动supervisor:

service supervisor start
supervisorctl reload

现在supervisor启动了。

supervisorctl tail -f shadowsocks stderr   //查看shadowsocks日志
supervisorctl restart shadowsocks        //重启shadowsocks进程
supervisorctl start shadowsocks        //启动shadowsocks进程
supervisorctl stop shadowsocks        //停止shadowsocks进程


编辑 /etc/supervisord.conf 在末尾添加:

[program:shadowsocks]
command=ssserver -c /etc/shadowsocks.json
autorestart=true
user=nobody

sudo chkconfig --add supervisord  //添加开机启动supervisor服务守护进程
sudo chkconfig supervisord on
service supervisord start   //官方git上的写错了，将“supervisord”少了个d，否则提示supervisor: unrecognized  service，意思是不能识别该服务
supervisorctl reload  //可以通过该命令重启shadowsocks。

Supervisord 是后台管理服务器, 用来依据配置文件的策略管理后台守护进程, 它会随系统自动启动
Supervisorctl 用于管理员向后台管理程序发送 启动/重启/停止 等指令;
